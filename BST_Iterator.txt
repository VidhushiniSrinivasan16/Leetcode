/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

public class BSTIterator {
    Stack<TreeNode> st=new Stack<TreeNode>();
    public BSTIterator(TreeNode root) {
        TreeNode current=root;
        while(current!=null){
            st.push(current);
            current=current.left;
        }
    }

    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        return st.size()!=0;
    }

    /** @return the next smallest number */
    public int next() {
        TreeNode result=st.pop();
        TreeNode curr=result;
        if(curr.right!=null){
            curr=curr.right;
            while(curr!=null){
                st.push(curr);
                curr=curr.left;
            }
        }
        return result!=null?result.val:-1;
    }
}

/**
 * Your BSTIterator will be called like this:
 * BSTIterator i = new BSTIterator(root);
 * while (i.hasNext()) v[f()] = i.next();
 */