class Solution {
    public int findMinDifference(List<String> timePoints) {
        List<Integer> time=new ArrayList<Integer>();
        int mm=Integer.MAX_VALUE;
        if(timePoints.isEmpty())
            return -1;
        for(int i=0;i<timePoints.size();i++)
        {
            int h=Integer.valueOf(timePoints.get(i).substring(0,2));
            time.add(h*60+Integer.parseInt(timePoints.get(i).substring(3,5)));
        }
        Collections.sort(time,(Integer a,Integer b)->a-b);
        System.out.println(time.get(0));
        for(int i=1;i<time.size();i++)
        {
            //System.out.println(time.get(i));
            mm=Math.min(mm,time.get(i)-time.get(i-1));
        }
        
        int corner=time.get(0)+(1440-time.get(time.size()-1));
        return Math.min(mm,corner);
    }
}