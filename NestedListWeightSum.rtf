{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * // This is the interface that allows for creating nested lists.\
 * // You should not implement it, or speculate about its implementation\
 * public interface NestedInteger \{\
 *     // Constructor initializes an empty nested list.\
 *     public NestedInteger();\
 *\
 *     // Constructor initializes a single integer.\
 *     public NestedInteger(int value);\
 *\
 *     // @return true if this NestedInteger holds a single integer, rather than a nested list.\
 *     public boolean isInteger();\
 *\
 *     // @return the single integer that this NestedInteger holds, if it holds a single integer\
 *     // Return null if this NestedInteger holds a nested list\
 *     public Integer getInteger();\
 *\
 *     // Set this NestedInteger to hold a single integer.\
 *     public void setInteger(int value);\
 *\
 *     // Set this NestedInteger to hold a nested list and adds a nested integer to it.\
 *     public void add(NestedInteger ni);\
 *\
 *     // @return the nested list that this NestedInteger holds, if it holds a nested list\
 *     // Return empty list if this NestedInteger holds a single integer\
 *     public List<NestedInteger> getList();\
 * \}\
 */\
class Solution \{\
    public int depthSum(List<NestedInteger> nestedList) \{\
        return dfs(nestedList,1);\
    \}\
    private int dfs(List<NestedInteger> nestedList,int mult) \{\
        int total=0;\
        for(NestedInteger n: nestedList) \{\
            if(n.isInteger()) \{\
                total+=n.getInteger()*mult;\
            \}else \{\
                total+=dfs(n.getList(),mult+1);\
            \}\
        \}\
        return total;\
    \}\
\}}