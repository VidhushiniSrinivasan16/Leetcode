class Solution {
    public int calculateMinimumHP(int[][] dungeon) {
        if(dungeon==null || dungeon.length==0||dungeon[0].length==0)
            return -1;
        int m=dungeon.length;
        int n=dungeon[0].length;
        int[][] hp=new int[m][n];
        hp[m-1][n-1]=Math.max(1-dungeon[m-1][n-1],1);
        
        for(int i=m-2;i>=0;i--)
            hp[i][n-1]=Math.max((hp[i+1][n-1]-dungeon[i][n-1]),1);
        
        for(int i=n-2;i>=0;i--)
            hp[m-1][i]=Math.max((hp[m-1][i+1]-dungeon[m-1][i]),1);
        
        for(int i=m-2;i>=0;i--)
        {
            for(int j=n-2;j>=0;j--)
            {
                int right=Math.max((hp[i][j+1] - dungeon[i][j]),1);
                int down =  Math.max((hp[i+1][j] - dungeon[i][j]),1);
                hp[i][j]=Math.min(right,down);
            }
        }
        return hp[0][0];
    }
}