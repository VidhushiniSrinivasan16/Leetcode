{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public int[] frequencySort(int[] nums) \{\
        Map<Integer,Integer> map = new HashMap<>();\
        for(int i=0;i<nums.length;i++)\
            map.put(nums[i],map.getOrDefault(nums[i],0)+1);\
        int[] res = new int[nums.length];\
       PriorityQueue<Map.Entry<Integer,Integer>> pq=new PriorityQueue<>(\
        new Comparator<Map.Entry<Integer,Integer>>() \{\
            @Override\
            public int compare(Map.Entry<Integer,Integer> a, Map.Entry<Integer,Integer>  b) \{\
                return a.getValue()==b.getValue()?b.getKey()-a.getKey():a.getValue()- b.getValue();\
            \}\
        \});\
        pq.addAll(map.entrySet());\
        int i=0;\
        while(!pq.isEmpty()) \{\
            Map.Entry<Integer,Integer> entry =pq.poll();\
            for(int j=1;j<=(int)entry.getValue();j++) \{\
               res[i]=entry.getKey();\
                i++;\
            \}\
            \
        \}\
        return res;\
    \}\
\}}