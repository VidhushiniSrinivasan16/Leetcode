{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for a binary tree node.\
 * public class TreeNode \{\
 *     int val;\
 *     TreeNode left;\
 *     TreeNode right;\
 *     TreeNode() \{\}\
 *     TreeNode(int val) \{ this.val = val; \}\
 *     TreeNode(int val, TreeNode left, TreeNode right) \{\
 *         this.val = val;\
 *         this.left = left;\
 *         this.right = right;\
 *     \}\
 * \}\
 */\
class Solution \{\
    class State \{\
        int nodeCount;\
        int sum;\
        double maxAvg;\
        public State(int n,int s,double m) \{\
            this.nodeCount=n;\
            this.sum=s;\
            this.maxAvg=m;\
        \}\
    \}\
    public double maximumAverageSubtree(TreeNode root) \{\
        return maximumAverage(root).maxAvg;\
    \}\
    \
    State maximumAverage(TreeNode root) \{\
        if(root==null)\
            return new State(0,0,0);\
        State left=maximumAverage(root.left);\
        State right=maximumAverage(root.right);\
        int nc=left.nodeCount+right.nodeCount+1;\
        int sum=left.sum+right.sum+root.val;\
        double maxAvg = Math.max((1.0*sum)/nc,Math.max(left.maxAvg,right.maxAvg));\
        return new State(nc,sum,maxAvg);\
    \}\
\}}