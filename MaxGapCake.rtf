{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public int maxArea(int h, int w, int[] horizontalCuts, int[] verticalCuts) \{\
        Arrays.sort(horizontalCuts);\
        Arrays.sort(verticalCuts);\
        int mod = 1_000_000_007;\
        int m = horizontalCuts.length;\
        int n = verticalCuts.length;\
        int maxHorizontalGap = Math.max(horizontalCuts[0],h - horizontalCuts[m-1]);\
        int maxVerticalGap = Math.max(verticalCuts[0], w - verticalCuts[n-1]);\
        \
        for(int i=1;i<m;i++)\
            maxHorizontalGap = Math.max(maxHorizontalGap,horizontalCuts[i]-horizontalCuts[i-1]);\
        for(int j=1;j<n;j++)\
            maxVerticalGap = Math.max(maxVerticalGap, verticalCuts[j]-verticalCuts[j-1]);\
        return (int)(maxHorizontalGap*1L*maxVerticalGap % mod);\
    \}\
\}}