{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public String longestPrefix(String s) \{\
        int n=s.length();\
        int[] lps = new int[n];\
        for(int i=1,j=0;i<n;i++) \{\
            while(j>0 && s.charAt(i)!=s.charAt(j)) j = lps[j-1];\
            if(s.charAt(i)==s.charAt(j)) lps[i]=++j;\
        \}\
        return s.substring(0,lps[n-1]);\
    \}\
\}}