{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public List<Integer> pancakeSort(int[] A) \{\
        List<Integer> res = new ArrayList<>();\
        int currMax=0;\
        int currIndex=A.length-1;\
        while(currIndex>0) \{\
            currMax=getCurrentIndexMax(A,currIndex);\
            if(currMax != currIndex) \{           \
            flip(A,currMax);\
            res.add(currMax+1);\
            flip(A,currIndex);\
            res.add(currIndex+1);\
            \}\
            currIndex--;\
        \}\
        return res;\
    \}\
    \
    public int getCurrentIndexMax(int A[],int t) \{\
        int maxIndex=0;\
        int max=A[0];\
        for(int i=1;i<=t;i++) \{\
            if(A[i]>max) \{\
                max = A[i];\
                maxIndex =i; \
            \}\'e5\
        \}\
        return maxIndex;\
    \}\
    \
    public void flip(int A[], int endIndex) \{\
        int startIndex=0;\
        while(startIndex<endIndex) \{\
            int temp = A[startIndex];\
            A[startIndex] = A[endIndex];\
            A[endIndex] = temp;\
            startIndex++;\
            endIndex--;\
        \}\
    \}\
\}}