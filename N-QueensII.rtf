{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    int result = 0;\
    public int totalNQueens(int n) \{\
        placeQueens(new int[n], 0 , n);\
        return result;\
    \}\
    \
    private void placeQueens(int[] columns, int row, int size) \{\
        if(row == size)\
            result++;\
        else \{\
            for(int col = 0;col<size;col++) \{\
                if(checkValid(columns, row,col)) \{\
                    columns[row]=col;\
                    placeQueens(columns, row+1, size);\
                \}\
            \}\
        \}\
    \}\
    \
    private boolean checkValid(int[] columns, int row1, int col1) \{\
        for(int row2=0;row2<row1;row2++) \{\
            int column2 = columns[row2];\
            \
            if(col1==column2)\
                return false;\
            \
            int colDist = Math.abs(column2-col1);\
            int rowDist =row1-row2;\
            if(colDist == rowDist)\
                return false;\
        \}\
        return true;\
    \}\
\}}