{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    int M = 1_000_000_007;\
    public int findPaths(int m, int n, int maxMove, int startRow, int startColumn) \{\
        int[][][] memo = new int[m][n][maxMove+1];\
        for(int[][] l: memo) \
            for(int[] s:l) Arrays.fill(s,-1);\
        return findPaths(m,n,maxMove,startRow,startColumn,memo);\
    \}\
    \
    private int findPaths(int m, int n, int N, int i, int j, int[][][] memo) \{\
        if(i==m||j==n||i<0||j<0) return 1;\
        if(N==0) return 0;\
        if(memo[i][j][N] >=0) return memo[i][j][N];\
        memo[i][j][N] = ((findPaths(m,n,N-1,i-1,j,memo)+findPaths(m,n,N-1,i+1,j,memo))%M +(findPaths(m,n,N-1,i,j-1,memo)+findPaths(m,n,N-1,i,j+1,memo))%M) % M;\
        return memo[i][j][N];\
    \}\
\}}