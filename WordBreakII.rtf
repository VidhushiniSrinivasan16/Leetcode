{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    Map<String,List<String>> map = new HashMap<>();\
    public List<String> wordBreak(String s, List<String> wordDict) \{\
        List<String> res = dfs(s,wordDict);\
        for(Map.Entry<String,List<String>> entry: map.entrySet()) \{\
            System.out.println(entry.getKey()+":"+ String.join(",",entry.getValue()));\
        \}\
        return res;\
    \}\
    private List<String> dfs(String s, List<String> wordDict) \{\
        if(map.containsKey(s))\
            return map.get(s);\
        List<String> res = new ArrayList<>();\
        if(s.length()==0) \{\
            res.add("");\
            return res;\
        \}\
        for(String word: wordDict) \{\
            if(s.startsWith(word)) \{\
                List<String> subList = dfs(s.substring(word.length()), wordDict);\
                for(String sub: subList)\
                   res.add(word+(sub.isEmpty()?"":" ")+sub);\
            \}\
        \}\
        map.put(s,res);\
        return res;\
    \}\
\}}