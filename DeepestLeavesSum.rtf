{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for a binary tree node.\
 * public class TreeNode \{\
 *     int val;\
 *     TreeNode left;\
 *     TreeNode right;\
 *     TreeNode(int x) \{ val = x; \}\
 * \}\
 */\
class Solution \{\
    public int height(TreeNode root) \{\
        if(root==null)\
            return 0;\
        return 1+Math.max(height(root.left),height(root.right));\
    \}\
    \
    public int getLevelSum(TreeNode root, int l) \{\
        if(root==null)\
            return 0;\
        if(l==1) return root.val;\
        return getLevelSum(root.left,l-1)+getLevelSum(root.right,l-1);\
    \}\
    public int deepestLeavesSum(TreeNode root) \{\
        int d=height(root);\
        return getLevelSum(root,d);\
    \}\
\}}