class Solution {
    public String smallestSubsequence(String text) {
        Stack<Integer> st = new Stack<>();
        int[] last = new int[26];
        boolean[] seen = new boolean[26];
        int n = text.length();
        for(int i=0;i<n;i++){
            last[text.charAt(i)-'a']=i;
        }
        for(int i=0;i<n;i++){
            int c = text.charAt(i) - 'a';
            if(seen[c]) continue;
            while(!st.isEmpty() && st.peek() > c && i < last[st.peek()]){
                seen[st.pop()]=false;
            }
            st.push(c);
            seen[c]=true;
        }
        StringBuilder sb = new StringBuilder();
        while(!st.isEmpty()){
            sb.insert(0,(char)(st.pop()+'a'));
        }
        return sb.toString();
    }
}