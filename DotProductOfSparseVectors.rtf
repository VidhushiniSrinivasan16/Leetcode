{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class SparseVector \{\
    int[] arr;\
    SparseVector(int[] nums) \{\
        arr=nums;\
    \}\
    \
	// Return the dotProduct of two sparse vectors\
    public int dotProduct(SparseVector vec) \{\
        int res=0;\
        for(int i=0;i<arr.length;i++)\
            res+=arr[i]*vec.arr[i];\
        return res;\
    \}\
\}\
\
// Your SparseVector object will be instantiated and called as such:\
// SparseVector v1 = new SparseVector(nums1);\
// SparseVector v2 = new SparseVector(nums2);\
// int ans = v1.dotProduct(v2);\
\
class SparseVector \{\
    Map<Integer,Integer> map;\
    SparseVector(int[] nums) \{\
        map=new HashMap<>();\
        for(int i=0;i<nums.length;i++)\
            if(nums[i]!=0)\
                map.put(i,nums[i]);\
    \}\
    \
	// Return the dotProduct of two sparse vectors\
    public int dotProduct(SparseVector vec) \{\
        int res=0;\
        for(int i: map.keySet())\
            if(vec.map.containsKey(i))\
                res+=map.get(i)*vec.map.get(i);\
        return res;\
    \}\
\}\
\
// Your SparseVector object will be instantiated and called as such:\
// SparseVector v1 = new SparseVector(nums1);\
// SparseVector v2 = new SparseVector(nums2);\
// int ans = v1.dotProduct(v2);}