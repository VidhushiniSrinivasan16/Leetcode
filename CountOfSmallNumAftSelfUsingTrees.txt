 class TreeNode
    {
        TreeNode left;
        TreeNode right;
        int val;
        int cnt=1;
        public TreeNode(int v)
        {
            this.val=v;
        }
    }
public class Solution {
  
	public List<Integer> countSmaller(int[] nums) {
		List<Integer> res = new ArrayList<Integer>();
		if(nums == null || nums.length == 0) return res;
		res.add(0);
		if(nums.length==1)
		{
		   return res; 
		}
		TreeNode tn=new TreeNode(nums[nums.length-1]);
		for(int i=nums.length-2;i>=0;i--)
		{
		    int c=insert(tn,nums[i]);
		    res.add(c);
		}
		Collections.reverse(res);
		return res;
}

public int insert(TreeNode root,int val)
{
    int cnt=0;
    //System.out.format("%d %d\n",root.val,val);
    while(true)
    {
        if(val<=root.val)
        {
            root.cnt++;
            if(root.left==null)
            {
            root.left=new TreeNode(val);
            break;
            }
            else
            {
            root=root.left;
            }
        }else
        {
            cnt+=root.cnt;
            if(root.right==null)
            {
            root.right=new TreeNode(val);
            break;
            }
            else
            {
            root=root.right;
            }
        }
    }
    return cnt;
}

}
