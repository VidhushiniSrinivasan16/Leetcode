{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public int maxProduct(String[] words) \{\
        int n = words.length;\
        Arrays.sort(words, new Comparator<String>() \{\
            public int compare(String a, String b) \{\
                return b.length() - a.length();\
            \}\
        \});\
        \
        int[] mask = new int[n];\
        for(int i=0;i<n;i++) \{\
            for(char c : words[i].toCharArray()) \{\
                mask[i]|=1<<c-'a';\
            \}\
        \}\
        int max=0;\
        for(int i=0;i<n;i++) \{\
            if (words[i].length() * words[i].length() <= max) break;\
            for(int j=i+1; j<n;j++) \{\
                if((mask[i] & mask[j]) == 0) \{\
                    max = Math.max(max, words[i].length()*words[j].length());\
                    break;\
                \}\
            \}\
        \}\
        return max;\
    \}\
\}}