{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for a binary tree node.\
 * public class TreeNode \{\
 *     int val;\
 *     TreeNode left;\
 *     TreeNode right;\
 *     TreeNode() \{\}\
 *     TreeNode(int val) \{ this.val = val; \}\
 *     TreeNode(int val, TreeNode left, TreeNode right) \{\
 *         this.val = val;\
 *         this.left = left;\
 *         this.right = right;\
 *     \}\
 * \}\
 */\
class Solution \{\
    int ans=0;\
    public int rangeSumBST(TreeNode root, int low, int high) \{\
        dfs(root,low,high);\
        return ans;\
    \}\
    private void dfs(TreeNode root,int low,int high) \{\
        if(root==null)\
            return;\
        if(low<=root.val && root.val<=high)\
            ans+=root.val;\
        if(low<root.val)\
            dfs(root.left,low,high);\
        if(root.val<high)\
            dfs(root.right,low,high);\
    \}\
\}}