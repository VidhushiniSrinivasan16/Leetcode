/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> result=new ArrayList<List<Integer>>();
        if(root==null)
            return result;
        List<Integer> lis=new ArrayList<Integer>();
        lis.add(root.val);
        dfs(result,lis,root,sum-root.val);
        return result;
    }
    
    public void dfs(List<List<Integer>> res,List<Integer> l,TreeNode root,int sum)
    {
        if(sum==0 && root.left==null && root.right==null)
        {
            List<Integer> temp=new ArrayList<Integer>();
            temp.addAll(l);
            res.add(temp);
        }
        
        if(root.left!=null)
        {
            l.add(root.left.val);
            dfs(res,l,root.left,sum-root.left.val);
            l.remove(l.size()-1);
        }
        
        if(root.right!=null)
        {
            l.add(root.right.val);
            dfs(res,l,root.right,sum-root.right.val);
            l.remove(l.size()-1);
        }
    }
}