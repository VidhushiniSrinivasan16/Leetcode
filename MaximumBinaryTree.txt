/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        if(nums==null|| nums.length==0)
            return null;
        return constructTree(nums,0,nums.length);
    }
    public TreeNode constructTree(int[] nums,int l,int r)
    {
        if(l>=r)
            return null;
        int max_idx= max(nums,l,r);
        TreeNode root=new TreeNode(nums[max_idx]);
        root.left=constructTree(nums,l,max_idx);
        root.right=constructTree(nums,max_idx+1,r);
        return root;
    }
    public int max(int[] nums,int l,int r)
    {
        int max_idx=l;
        for(int i=l;i<r;i++)
        {
            if(nums[max_idx]< nums[i])
            {
                max_idx=i;
            }
        }
        return max_idx;
    }
}