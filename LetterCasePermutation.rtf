{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public List<String> letterCasePermutation(String s) \{\
        List<String> res = new ArrayList<>();\
        backtrack(s, 0, "", res);\
        return res;\
    \}\
    private void backtrack(String S, int pos, String tmp, List<String> res) \{\
        if (tmp.length() == S.length()) \{\
            res.add(tmp);\
            return;\
        \}\
        char ch = S.charAt(pos);\
        if(Character.isDigit(ch)) \{\
            backtrack(S, pos+1, tmp+ch, res);\
        \}else \{\
            backtrack(S, pos+1, tmp+Character.toLowerCase(ch), res);\
            backtrack(S, pos+1, tmp+Character.toUpperCase(ch), res);\
        \}\
    \}\
\}}