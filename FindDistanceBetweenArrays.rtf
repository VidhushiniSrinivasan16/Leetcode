{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public int findTheDistanceValue(int[] arr1, int[] arr2, int d) \{\
        TreeSet<Integer> ts = new TreeSet<>();\
        int res=0;\
        for(int n: arr2) \{\
            ts.add(n);\
        \}\
        for(int n: arr1) \{\
            Integer higher = ts.ceiling(n);\
            Integer lower = ts.floor(n);\
            int diff=0;\
            if(higher==null) \{\
                diff=Math.abs(lower-n);\
            \}else if(lower==null) \{\
                diff=Math.abs(higher-n);\
            \}else\{\
                diff=Math.min(higher-n,n-lower);\
            \}\
            if(diff>d)\
                res++;\
        \}\
        return res;\
    \}\
\}}