/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists==null|| lists.length==0)
          return null;
        ListNode head=new ListNode(0);
        ListNode p=head;
        PriorityQueue<ListNode> pq=new PriorityQueue<ListNode>( new Comparator<ListNode>(){
            @Override
            public int compare(ListNode l1,ListNode l2)
            {
                return l1.val-l2.val;
            }
        });
        
        for(ListNode lis:lists)
        {
            if(lis!=null)
                pq.offer(lis);
        }
        
        while(!pq.isEmpty())
        {
            ListNode n=pq.poll();
            p.next=n;
            p=p.next;
            
            if(n.next!=null)
                pq.offer(n.next);
        }
        return head.next;
    }
}