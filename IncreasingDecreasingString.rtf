{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public String sortString(String s) \{\
        TreeMap<Character,Integer> map = new TreeMap<>();\
        for(int i=0;i<s.length();i++) \{\
            char c = s.charAt(i);\
            map.put(c,1+map.getOrDefault(c,0));\
        \}\
        boolean asc=true;\
        StringBuilder sb = new StringBuilder();\
        while(!map.isEmpty()) \{\
            for(char c: asc? new TreeSet<>(map.keySet()): new TreeSet<>(map.descendingKeySet())) \{\
                sb.append(c);\
                map.put(c,map.get(c) - 1);\
                map.remove(c,0);\
            \}\
            asc=!asc;\
        \}\
        return sb.toString();\
    \}\
\}}