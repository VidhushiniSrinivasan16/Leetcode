class Solution {
    public int longestSubstring(String s, int k) {
        if(s==null||s.length()==0)
            return 0;
        return dfs(s.toCharArray(),0,s.length(),k);
    }
    
    private int dfs(char[] ch,int l,int r,int k){
        if(r-l<k)
            return 0;
        int[] count=new int[26];
        for(int i=l;i<r;i++){
            count[ch[i]-'a']++;
        }
        for(int i=0;i<26;i++){
            if(count[i]<k && count[i]>0){
                for(int j=l;j<r;j++){
                    if(ch[j]==i+'a'){
                        int left=dfs(ch,l,j,k);
                        int right=dfs(ch,j+1,r,k);
                        return Math.max(left,right);
                    }
                }
            }
        }
        return r-l;
    }
}