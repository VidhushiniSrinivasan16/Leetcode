package test;


public class Test
{
// arguments are passed using the text field below this editor
  public static void main(String[] args)
  {
    ListNode l1=new ListNode(5);
    l1.next=new ListNode(6);
    l1.next.next = new ListNode(3);
    l1.next.next.next=new ListNode(2);
    
    ListNode l2=new ListNode(8);
    l2.next=new ListNode(4);
    l2.next.next=new ListNode(2);
    
    
    ListNode result=null;
    Add a=new Add();
    result=a.addList(l1,l2);
    while(result!=null)  
    {
    	System.out.println(result.val+" ");
    	result=result.next;
    }
  }
}

class ListNode
{
  int val;
  ListNode next;
  public ListNode(int v)
  {
    this.val=v;
  }
}
// you can add other public classes to this editor in any order
class Add
{
  ListNode result=null;
  ListNode cur=null;
  int carry=0;
  public Add(){
  }
  public ListNode addList(ListNode l1,ListNode l2)
  {
    if(l1==null)
      return l2;
    if(l2==null)
      return l1;
    
    int s1=getSize(l1);
    int s2=getSize(l2);

    if(s1==s2){
      addSameSize(l1,l2);
    }else{
      int diff=Math.abs(s1-s2);
    
      if(s1<s2){
        ListNode temp=l1;
        l1=l2;
        l2=temp;
      }
      ListNode temp=l1;
      while(diff-->=0){
        cur=temp;
        temp=temp.next;
      }
      addSameSize(cur,l2);
      propogateCarry(l1);
    }
    
    if(carry>0){
      push(carry);
    }
   return result;
  }
  
  public int getSize(ListNode node)
  {
    int count=0;
    while(node!=null)
    {
      count++;
      node=node.next;
    }
    return count;
  }
  
  public void addSameSize(ListNode l1,ListNode l2)
  {
    if(l1==null)
      return;
    addSameSize(l1.next,l2.next);
    int sum=l1.val+l2.val+carry;
    carry=sum/10;
    sum=sum%10;
    
    System.out.println("carry:"+carry);
    push(sum);
  }
  public void propogateCarry(ListNode l1)
  {
    if(l1==null)
      return;
    if(l1!=cur)
    {
    propogateCarry(l1.next);
    int sum=l1.val+carry;
    carry=sum/10;
    sum=sum%10;
    
    push(sum);
    }
    
  }
  
  public void push(int sum)
  {
    ListNode newNode=new ListNode(sum);
    newNode.next=result;
    result=newNode;
   
  }
}

