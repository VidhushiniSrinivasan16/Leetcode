{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public List<String> stringMatching(String[] words) \{\
        List<String> res = new ArrayList<>();\
        if(words==null || words.length==0) return res;\
        int n= words.length;\
        for(int i=0;i<n;i++) \{\
            for(int j=0;j<n;j++) \{\
                if(j==i) \{\
                    continue;\
                \}\
                if(words[i].length()>words[j].length())\
                    continue;\
                if(words[j].contains(words[i])) \{\
                    res.add(words[i]);\
                    break;\
                \}\
            \}\
        \}\
        return res;\
    \}\
\}}