{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class WordDistance \{\
    String[] arr;\
    public WordDistance(String[] wordsDict) \{\
        arr=wordsDict;\
    \}\
    \
    public int shortest(String word1, String word2) \{\
        Integer i=null,j=null;\
        int dist=Integer.MAX_VALUE;\
        for(int k=0;k<arr.length;k++) \{\
            if(word1.equals(arr[k])) \{\
                i=k;\
                if(j!=null) \{\
                        dist=Math.min(dist,Math.abs(i-j));\
                    \}\
            \}\
            if(word2.equals(arr[k])) \{     \
                j=k;\
                if(i!=null)\
                    dist=Math.min(dist,Math.abs(i-j));\
                \
            \}\
        \}\
        return dist==Integer.MAX_VALUE?-1:dist;\
            \
    \}\
\}\
\
/**\
 * Your WordDistance object will be instantiated and called as such:\
 * WordDistance obj = new WordDistance(wordsDict);\
 * int param_1 = obj.shortest(word1,word2);\
 */\
\
class WordDistance \{\
    Map<String,List<Integer>> map = new HashMap<>();\
    public WordDistance(String[] wordsDict) \{\
        int n=wordsDict.length;\
        for(int i=0;i<n;i++) \{\
            List<Integer> loc=map.getOrDefault(wordsDict[i],new ArrayList<>());\
            loc.add(i);\
            map.put(wordsDict[i],loc);\
        \}\
    \}\
    \
    public int shortest(String word1, String word2) \{\
        List<Integer> loc1 = map.getOrDefault(word1,null);\
        List<Integer> loc2 = map.getOrDefault(word2,null);\
        int l1=0,l2=0,dist=Integer.MAX_VALUE;\
        while(loc1!=null && loc2!=null && l1<loc1.size() && l2<loc2.size()) \{\
            dist=Math.min(dist,Math.abs(loc1.get(l1)-loc2.get(l2)));\
            if(loc1.get(l1)<loc2.get(l2)) \{\
                l1++;\
            \}else \{\
                l2++;\
            \}\
            \
        \}\
        return loc1==null||loc2==null?-1:dist;\
    \}\
\}\
\
/**\
 * Your WordDistance object will be instantiated and called as such:\
 * WordDistance obj = new WordDistance(wordsDict);\
 * int param_1 = obj.shortest(word1,word2);\
 */}