{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    public String longestNiceSubstring(String s) \{\
         int n=s.length();\
        if(n<2)\
            return "";\
        Set<Character> hs = new HashSet<>();\
       \
        for(int i=0;i<n;i++)\
            hs.add(s.charAt(i));\
        for(int i=0;i<n;i++) \{\
            char ch = s.charAt(i);\
            if(hs.contains(Character.toUpperCase(ch)) && hs.contains(Character.toLowerCase(ch))) continue;\
            String sub1 = longestNiceSubstring(s.substring(0,i));\
            String sub2 = longestNiceSubstring(s.substring(i+1));\
            return sub1.length()>=sub2.length()?sub1:sub2;\
        \}\
        return s;\
    \}\
\}}