{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Solution \{\
    class Visit \{\
        String userName;\
        int timestamp;\
        String website;\
        public Visit(String u,int t,String w) \{\
            this.userName=u;\
            this.timestamp=t;\
            this.website=w;\
        \}\
    \}\
    public List<String> mostVisitedPattern(String[] username, int[] timestamp, String[] website) \{\
        List<Visit> visitList = new ArrayList<>();\
        for(int i=0;i<username.length;i++)\
            visitList.add(new Visit(username[i],timestamp[i],website[i]));\
        Collections.sort(visitList, (a,b)->a.timestamp-b.timestamp);\
        Map<String,List<String>> userWebSitesMap = new HashMap<>();\
        for(Visit v: visitList) \{\
            userWebSitesMap.putIfAbsent(v.userName,new ArrayList<>());\
            userWebSitesMap.get(v.userName).add(v.website);\
        \}\
        \
        Map<List<String>,Integer> seqFreqMap = new HashMap<>();\
        for(List<String> websites: userWebSitesMap.values()) \{\
            if(websites.size()<3)\
                continue;\
            Set<List<String>> patternForEachUser = generate3Pattern(websites);\
            for(List<String> pattern : patternForEachUser) \{\
                seqFreqMap.putIfAbsent(pattern,0);\
                seqFreqMap.put(pattern,seqFreqMap.get(pattern)+1);\
            \}\
        \}\
        \
        int max=0;\
        List<String> res = new ArrayList<>();\
        for(Map.Entry<List<String>,Integer> entry: seqFreqMap.entrySet()) \{\
            if(entry.getValue() > max) \{\
                res=entry.getKey();\
                max=entry.getValue();\
            \}else if(entry.getValue()==max) \{\
                if(entry.getKey().toString().compareTo(res.toString())<0) \{\
                    res=entry.getKey();\
                \}\
            \}\
        \}\
        return res;\
    \}\
    \
    private  Set<List<String>> generate3Pattern(List<String> websites) \{\
        Set<List<String>> seqSet=new HashSet<>();\
        int n=websites.size();\
        for(int i=0;i<n;i++) \{\
            for(int j=i+1;j<n;j++) \{\
                for(int k=j+1;k<n;k++) \{\
                    List<String> pattern = new ArrayList<>();\
                    pattern.add(websites.get(i));\
                    pattern.add(websites.get(j));\
                    pattern.add(websites.get(k));\
                    seqSet.add(pattern);\
                \}\
            \}\
        \}\
        return seqSet;\
    \}\
\}}