public class Solution {
    public int maxProduct(int[] nums) {
        int[] min=new int[nums.length];
        int[] max=new int[nums.length];
        max[0]=min[0]=nums[0];
        int result=nums[0];
        for(int i=1;i<nums.length;i++)
        {
        if(nums[i]>0)
            {
              max[i] =Math.max(nums[i],max[i-1]*nums[i]) ;
              min[i]=Math.min(nums[i],min[i-1]*nums[i]);
            }
            else
            {
                max[i]=Math.max(nums[i],min[i-1]*nums[i]);
                min[i]=Math.min(nums[i],max[i-1]*nums[i]);
            }
            result=Math.max(result,max[i]);
        }
        return result;
}
}
O(1) space

class Solution {
    public int maxProduct(int[] nums) {
        int max=nums[0];
        int min=nums[0];
        int res=nums[0];
        for(int i=1;i<nums.length;i++)
        {
            if(nums[i]>0)
            {
                max=Math.max(nums[i],max*nums[i]);
                min=Math.min(nums[i],min*nums[i]);
            }else{
                int temp=max;
                max=Math.max(nums[i],min*nums[i]);
                min=Math.min(nums[i],temp*nums[i]);
            }
            res=Math.max(res,max);
        }
        return res;
    }
}